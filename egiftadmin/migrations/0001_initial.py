# Generated by Django 2.1.15 on 2020-05-31 15:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('role_id', models.IntegerField(choices=[(1, 'Role 1'), (2, 'Merchant'), (3, 'Role 3'), (4, 'App User')], default=4)),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=256)),
                ('user_type', models.IntegerField(choices=[(6, 'User type 6'), (7, 'User type 7'), (8, 'User type 8'), (9, 'User type 9')], default=6)),
                ('access_token', models.CharField(max_length=256)),
                ('auth_key', models.CharField(max_length=256)),
                ('status', models.IntegerField(choices=[(1, 'Active'), (2, 'Status 2'), (3, 'Status 3')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.TextField()),
                ('description', models.TextField()),
                ('address', models.TextField()),
                ('mission', models.TextField()),
                ('vision', models.TextField()),
                ('history', models.TextField()),
                ('email', models.CharField(max_length=191)),
                ('contact_no', models.CharField(max_length=191)),
                ('facebook', models.CharField(max_length=191)),
                ('twitter', models.CharField(max_length=191)),
                ('instagram', models.CharField(max_length=191)),
                ('yahoo', models.CharField(max_length=191)),
                ('terms_and_condition', models.TextField()),
                ('privacy_policy', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AccountRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('email', models.CharField(max_length=191)),
                ('telephone_no', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('address', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Branches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_id', models.IntegerField()),
                ('name', models.CharField(max_length=191)),
                ('description', models.TextField()),
                ('latitude', models.CharField(max_length=32)),
                ('longitude', models.CharField(max_length=32)),
                ('username', models.CharField(max_length=256)),
                ('password', models.CharField(max_length=256)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Commentmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('comment_id', models.BigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.BigAutoField(db_column='comment_ID', primary_key=True, serialize=False)),
                ('comment_post_id', models.BigIntegerField(db_column='comment_post_ID')),
                ('comment_author', models.TextField()),
                ('comment_author_email', models.CharField(max_length=100)),
                ('comment_author_url', models.CharField(max_length=200)),
                ('comment_author_ip', models.CharField(db_column='comment_author_IP', max_length=100)),
                ('comment_date', models.DateTimeField()),
                ('comment_date_gmt', models.DateTimeField()),
                ('comment_content', models.TextField()),
                ('comment_karma', models.IntegerField()),
                ('comment_approved', models.CharField(max_length=20)),
                ('comment_agent', models.CharField(max_length=255)),
                ('comment_type', models.CharField(max_length=20)),
                ('comment_parent', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EgiftFreebies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('egift_id', models.IntegerField()),
                ('freebies_id', models.IntegerField()),
                ('qty', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='EgiftTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('description', models.TextField()),
                ('content', models.TextField()),
                ('css', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='EgiftTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('egift_id', models.IntegerField()),
                ('transaction_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('orig_price', models.FloatField()),
                ('sale_price', models.FloatField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='EgiftUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('egift_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='EgiftUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('egift_id', models.IntegerField()),
                ('orig_price', models.FloatField()),
                ('sale_price', models.FloatField()),
                ('to', models.IntegerField()),
                ('status', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=191)),
                ('answer', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Freebies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('category_id', models.IntegerField()),
                ('supplier_id', models.IntegerField()),
                ('unit_id', models.IntegerField()),
                ('price', models.FloatField()),
                ('qty', models.FloatField()),
                ('image', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('name', models.CharField(max_length=256)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Icon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('link_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('link_url', models.CharField(max_length=255)),
                ('link_name', models.CharField(max_length=255)),
                ('link_image', models.CharField(max_length=255)),
                ('link_target', models.CharField(max_length=25)),
                ('link_description', models.CharField(max_length=255)),
                ('link_visible', models.CharField(max_length=20)),
                ('link_owner', models.BigIntegerField()),
                ('link_rating', models.IntegerField()),
                ('link_updated', models.DateTimeField()),
                ('link_rel', models.CharField(max_length=255)),
                ('link_notes', models.TextField()),
                ('link_rss', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Migration',
            fields=[
                ('version', models.CharField(max_length=180, primary_key=True, serialize=False)),
                ('apply_time', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='NatureOfBusiness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('icon_id', models.IntegerField()),
                ('name', models.CharField(max_length=128)),
                ('image', models.TextField(blank=True, null=True)),
                ('description', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Newspeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('egift_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('content', models.TextField()),
                ('link', models.CharField(max_length=128)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('option_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('option_name', models.CharField(max_length=191, unique=True)),
                ('option_value', models.TextField()),
                ('autoload', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('egift_id', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=191)),
                ('company_name', models.CharField(max_length=191)),
                ('position', models.CharField(max_length=191)),
                ('self_description', models.TextField()),
                ('inspiring_message', models.TextField()),
                ('logo', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='PointManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.IntegerField()),
                ('benchmark', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Postmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('post_id', models.BigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('post_author', models.BigIntegerField()),
                ('post_date', models.DateTimeField()),
                ('post_date_gmt', models.DateTimeField()),
                ('post_content', models.TextField()),
                ('post_title', models.TextField()),
                ('post_excerpt', models.TextField()),
                ('post_status', models.CharField(max_length=20)),
                ('comment_status', models.CharField(max_length=20)),
                ('ping_status', models.CharField(max_length=20)),
                ('post_password', models.CharField(max_length=255)),
                ('post_name', models.CharField(max_length=200)),
                ('to_ping', models.TextField()),
                ('pinged', models.TextField()),
                ('post_modified', models.DateTimeField()),
                ('post_modified_gmt', models.DateTimeField()),
                ('post_content_filtered', models.TextField()),
                ('post_parent', models.BigIntegerField()),
                ('guid', models.CharField(max_length=255)),
                ('menu_order', models.IntegerField()),
                ('post_type', models.CharField(max_length=20)),
                ('post_mime_type', models.CharField(max_length=100)),
                ('comment_count', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PriceVariety',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('egift_id', models.IntegerField()),
                ('orig_price', models.FloatField()),
                ('sale_price', models.FloatField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('first_name', models.CharField(max_length=191)),
                ('last_name', models.CharField(max_length=191)),
                ('description', models.TextField()),
                ('tel_no', models.CharField(max_length=64)),
                ('address', models.TextField()),
                ('logo', models.ImageField(blank=True, upload_to='uploads')),
                ('logo_banner', models.ImageField(blank=True, upload_to='uploads')),
                ('allowed_egifts', models.IntegerField()),
                ('nature_of_business', models.TextField()),
                ('terms_and_condition', models.TextField()),
                ('opening_hour', models.CharField(max_length=32)),
                ('closing_hour', models.CharField(max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('rate', models.IntegerField()),
                ('message', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ReferralPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('points', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=191)),
                ('access', models.TextField()),
                ('actions', models.TextField()),
                ('navigation', models.TextField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_id', models.IntegerField()),
                ('branch_id', models.IntegerField()),
                ('transaction_id', models.IntegerField()),
                ('amount', models.FloatField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_point_referrer', models.IntegerField()),
                ('referral_point_referred', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='SmushDirImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.TextField()),
                ('path_hash', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('resize', models.CharField(blank=True, max_length=55, null=True)),
                ('lossy', models.CharField(blank=True, max_length=55, null=True)),
                ('error', models.CharField(blank=True, max_length=55, null=True)),
                ('image_size', models.PositiveIntegerField(blank=True, null=True)),
                ('orig_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_time', models.PositiveIntegerField(blank=True, null=True)),
                ('last_scan', models.DateTimeField()),
                ('meta', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('address', models.TextField()),
                ('contact_no', models.CharField(max_length=32)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Termmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('term_id', models.BigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermRelationships',
            fields=[
                ('object_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('term_taxonomy_id', models.BigIntegerField()),
                ('term_order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Terms',
            fields=[
                ('term_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
                ('term_group', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TermTaxonomy',
            fields=[
                ('term_taxonomy_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('term_id', models.BigIntegerField()),
                ('taxonomy', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('parent', models.BigIntegerField()),
                ('count', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_no', models.CharField(max_length=128)),
                ('user_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='UserFriend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('friend_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Usermeta',
            fields=[
                ('umeta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('points', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('user_login', models.CharField(max_length=60)),
                ('user_pass', models.CharField(max_length=255)),
                ('user_nicename', models.CharField(max_length=50)),
                ('user_email', models.CharField(max_length=100)),
                ('user_url', models.CharField(max_length=100)),
                ('user_registered', models.DateTimeField()),
                ('user_activation_key', models.CharField(max_length=255)),
                ('user_status', models.IntegerField()),
                ('display_name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('egift_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='YoastSeoLinks',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=255)),
                ('post_id', models.BigIntegerField()),
                ('target_post_id', models.BigIntegerField()),
                ('type', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='YoastSeoMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.BigIntegerField(unique=True)),
                ('internal_link_count', models.PositiveIntegerField(blank=True, null=True)),
                ('incoming_link_count', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='termtaxonomy',
            unique_together={('term_id', 'taxonomy')},
        ),
        migrations.AlterUniqueTogether(
            name='termrelationships',
            unique_together={('object_id', 'term_taxonomy_id')},
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('email', 'access_token', 'auth_key')},
        ),
    ]
